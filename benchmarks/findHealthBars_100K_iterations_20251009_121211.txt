================================================================================
NATIVE MODULE PERFORMANCE BENCHMARK
================================================================================
Iterations: 100000
Warmup: 10
Frame: /tmp/hb_mismatch_1760002760077.raw

Frame loaded: 1920x1044 (31.64 MB)

--------------------------------------------------------------------------------
Module: findHealthBars
--------------------------------------------------------------------------------
Function: findHealthBars
Parameters: 2 arguments

Results:
  Iterations: 100000
  Total time: 29.64s

Performance Statistics:
  Min:     0.206 ms
  Max:     11.597 ms
  Mean:    0.296 ms Â± 0.101 ms
  Median:  0.268 ms
  95th %:  0.452 ms
  99th %:  0.574 ms

Throughput: 3373.4 operations/sec

Result: Array with 1 items

================================================================================
PERFORMANCE SUMMARY
================================================================================

Module Performance Ranking (fastest to slowest):

 1. findHealthBars           0.30 ms â–ˆ

Performance Targets:
  ðŸŸ¢ Excellent: < 2ms   (60+ FPS capable)
  ðŸŸ¡ Good:      < 5ms   (good for real-time)
  ðŸŸ  Acceptable: < 10ms (acceptable)
  ðŸ”´ Slow:      > 10ms  (needs optimization)

ðŸŸ¢ findHealthBars: 0.30 ms

Frame Budget Analysis (60 FPS = 16.67 ms/frame):

  findHealthBars:
    Mean: 0.30 ms (1.8% of frame budget) âœ“
    95th: 0.45 ms (2.7% of frame budget) âœ“

================================================================================
Benchmark complete!

Next steps:
  1. Identify bottlenecks using --verbose flag
  2. Profile with perf: perf record -g node tools/benchmark_native_modules.js <module>
  3. Optimize hot paths in C++ code
  4. Re-run benchmark to verify improvements
================================================================================
